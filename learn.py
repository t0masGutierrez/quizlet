import streamlit as st
from quizlet import md_to_txt
from quizlet import clean_data

def learn():
    pass

def learn_flashcards(file_path, is_shuffle, answ_type):
    """
    Repeatedly loop through the data until mastered

    Parameters
    ----------
    file_path : str
        Location of clicked subdirectory
    is_shuffle : bool
        Randomize the data or not
    answ_type : str
        Type of answer generated by the client
    """
    # add all terms, definitions to session state as true
    # loop through all items of data and equate session_state with true
    # if item not in seen append item 
    # create button for false item
    # on_click 

    data = clean_data(file_path)
    for term, definition in data.items():
        if term not in st.session_state:
            st.session_state[term] = True

    def hide_flashcard(term):
        """
        Hide element of data

        Parameters
        ----------
        term : str
        """
        st.session_state[term] = True
        st.write(data[term])

    seen = []
    unseen = []
    for term, definition in data.items():
        defs = data.values()
        index = list(defs).index(definition)
        st.progress(index)
        if st.session_state[term]:
            st.button(term, on_click=hide_flashcard, args=[term])

def learn_choice(file_path, is_shuffle, answ_type):
    """
    Repeatedly loop through the data until mastered

    Parameters
    ----------
    file_path : str
        Location of clicked subdirectory
    is_shuffle : bool
        Randomize the data or not
    answ_type : str
        Type of answer generated by the client
    """
    data = clean_data(file_path)

    def hide_choice():
        pass

    correct = []
    incorrect = []

def learn_write(file_path, is_shuffle, answ_type):
    """
    Repeatedly loop through the data until mastered

    Parameters
    ----------
    file_path : str
        Location of clicked subdirectory
    is_shuffle : bool
        Randomize the data or not
    answ_type : str
        Type of answer generated by the client
    """
    data = clean_data(file_path)

    def hide_write():
        pass

    correct = []
    incorrect = []

def learn_test(file_path, is_shuffle, answ_type):
    """
    Repeatedly loop through the data until mastered

    Parameters
    ----------
    file_path : str
        Location of clicked subdirectory
    is_shuffle : bool
        Randomize the data or not
    answ_type : str
        Type of answer generated by the client
    """
    data = clean_data(file_path)

    def hide_test():
        pass

    correct = []
    incorrect = []


def main():
    learn()

if __name__ == "__main__":
    main()
